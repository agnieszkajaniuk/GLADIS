[gen]


Mass = 10.0      			;BH Mass in solar masses
Kappa = 0.34         			;Electron-scattering opacity
Alpha = 1.e-2 				;Viscosity coefficient in the disk
AlphaCor = 1.e-2 			;Viscosity in corona
Mdot = 2.37e-7				;Global accretion rate in Solar masses per year
Qadv = 0.33 					;Advection constant

BetaS = 0.1 					;Ratio of the disk magnetic field B_z to the global magnetic field (<=1.0)
Kappa_dyn = 100 			;Ratio of the magnetic dynamo timescale to the orbital timescale

Xicor = 0.0				;fcor in Eq. (24) Janiuk et al. 2002
Dzet = 0.0 				; A in Eq. (25) Janiuk et al. 2002
etajet3 = 0.0 				;fout in Eq. (24) Janiuk et al. 2002

fac = 0.02125 

C1 = 1.25        			;coefficients for vertical structure integration
C2 = 6.25 				;see Eqs. (16-18) Janiuk et al. 2002
C3 = 0.17 
C4 = 1.0 
C5 = 1.59              
C6 = 1.0 

B1 = 5.e-1 		;parameter for mass exchange, Eq. (26) Janiuk&Czerny 2005
B2 = 5.e-1 		;parameter for mass exchange, Eq. (26) Janiuk&Czerny 2005

xi0 = 8.0               ;coefficient in modified viscosity law, Eq. (7) Janiuk&Czerny 2005
Alpha0 = 1.e-2 	; scaling viscosity in modified viscosity law, Eq. (7) Janiuk&Czerny 2005



[grid]

Rmax = 300.0						;Outer radius of the disk in Schwarzschild radii 
Rmin = 3.01 						;Inner radius of the disk


[switches]

heating = 0             ;if 1 then corona in heating term -- if 0 then corona in cooling term
viscosity = 1           ;if 1 then modified viscosity law of (JC2005)
hotvis = 0              ;if 1 then alpha hot < alpha cold (Eq. 26 JC2005)
iptot = 1               ;if 1 then heating proportional to total pressure, if 0 then heating proportional to gas pressure
ipsqrt = 0							;if 1 then heating propto sqrt(Pgas*Ptot), only if 0 here then iptot works
PBK = 0                 ;if 1 then first PBK_time sec without corona; works for wymiana_masy equal to 1
PBK_time = 3.1e3        ;time to activate corona, in seconds


wymiana_masy = 0 				;if 1 then mass exchange between disk and corona is on

wymiana_flux = 1				;if 1 then mass evaporation is due to the generated flux
												;if 0 then mass evaporation due to magnetic field
												
case_mz = B							;Works if mass evaporation due to magnetic field. Options to choose: A - alvfen velocity,  B - light speed, C - alvfen devided by inner boundary condition	(see Eq.(10) in Janiuk & Czerny 2007)

grid_radius = 0 					;if 1 then magnetic grid proportional to  square root of the disk radius,
													;if 0 then choose one of these below

gridRR = 1      					;magnetic cell proportional to disk radius
gridHR = 0      					;magnetic cell proportional to disk height
													;Caution: if magnetic grid proportional to disk height -- file rsig.dat needed to read data!!
												             
external_mdot = 0     ;type of outer boundary 0 - constant mdot, 1 - periodic mdot, 2 - tabularized mdot							
Tper = 0.0    	      ; Perturbation period if periodic outer boundary												             					             
alfa_flickering = 0  ;1 - changing viscosity with time and radius as a Markov chain. Caution: file rsig.dat needed! ;strength of this flickering governed by the bpar parameter

flicker_dyn = 0    ;1 - timescale of flickering scaled with dynamical time

flicker_visc = 1   ;1 - timescale of flickering scaled with viscous time

bpar = 0.6        ;scaling factor for the flickering of alfa (e.g., Eq. 4 Janiuk & Misra 2012)

[solve]

nsolve_method = 0       ; = 0     /*0 - Euler, 1 - RungeKutta, 2 - PredictorCorrector, 3 - Heun */

Tmin = 0.0 							;Start of the evolution
Tmax = 1.e5 				;End of the evolution (in seconds)


DtStart = 1.e-5
krok_staly = 0      		;if 0 then adaptive step
ErrMax = 0.05        		;Maximum change (in %) of the variables for the timestep change


[inout]

lekran = 10000					;Frequency of output on the screen (in timesteps)


llum = 10.       					;if 1 then lightcurve output to the file lum.dat
tlum = 0     			;Starting time for output to lum.dat
dtlum = 1  					;Time step for output to lum.dat
deltalum = 0.01   			;Minimum luminosity change for extra output to lum.dat (if 0.0 then no extra output)

lrad = 0       					;if 1 then radial profiles written to files rsig.*
trad = 5.e4     		;Starting time for output to rsig.*
tradend = 6.e4  		;End time for output to rsig.*
dtrad = 1.e4     			;Time step for output to rsig.*
 
lsig = 1       					;if 1 then variables T, Sigma written to files sigte.*
tsig = 5.e4     				;Starting time for output to sigte.*
dtsig = 100.0     				;Time step for output to sigte.*

lhdf = 0                                        ;if 1 then HDF files are written to hdf*.*
thdf = 5.e4                                   ;Starting time for output to hdf*.*
dthdf = 1.e2                                    ;Dumping frequency for output to hdf*.*

[restore]

lrestore = 0    			;if 1 then dumps written for restart
trestore = 0      		;Starting time for dump output
dtrestore = 7200   	;Time step for dump output (realtime seconds)
nrestore = 0       		;if > 0 then restoring evolution from dump.dat.nrestore

